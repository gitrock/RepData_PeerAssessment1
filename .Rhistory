swirl()
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = 'green')
abline(v = 12, lwd = 2)
abline(v = median(ppm) , col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region"    )
barplot(reg, col = "wheat", main = "Number of Counties in Each Region"    )
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1) , mar = c(4, 4, 2, 1))
subset(pollution, pollution$region == "east")
subset(pollution, region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(lattitude , pm25))
with(pollution, plot(latitude , pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, pollution$ppm , col = pollution$region)
plot(pollution$latitude, ppm , col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par( mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot( west$latitude, west$pm25, main = "West")
plot( east$latitude, east$pm25, main = "East")
swirl()
?Devices
with( faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with( faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with( faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
getwd()
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed) , max(cars$dist),  "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, state, layout = c(2 , 2))
head(mpg )
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
swirl()
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, data = airquality)
boxplot(Ozone ~ Month, data = airquality, xlab = "Month", ylab = "Ozone", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in New York City")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, col = "blue", pch = 2)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "blue", pch = 8)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par("mfrow") <- c(1,2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
play()
nxt()
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0 , 0 , 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = T)
mtext("Ozone and Weather in New York City", outer = TRUE)
q()
library(swirl)
swirl()
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airq)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout=c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2, 1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
dir()
dir(pattern = ".R")
getwd()
q()
library(swirl)
swirl()
q()
library(swirl)
swirl()
swirl()
sample(colors(), 10)
pal <- colorRamp(c("red" , "blue"))
pal(0)
pal(1)
pal(seq(0, 1, len = 6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red" , "yellow"))
p2(2)
p2(10)
windows()
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue" , "green") , alpha = .5)
p3(5)
plot(x, y, pch = 19, col = rgb(0, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
q()
library(swirl)
swirl()
library(swirl)
swirl()
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
window()
play()
?window
windows()
nxt()
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data  = diamonds, geom = "density")
qplot(price, data  = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = . ~ cuts) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = . ~ cut) + geom_smooth(method = "lm")
g <- ggplot(data = diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(data = diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd, ]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm" , size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid( . ~cut)
q()
library(lattice)
?lpoints
?trellis.par.set
?splom
library(datasets)
data("airquality")
ls()
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
data(movies)
library()
data("movies")
library(ggplot2)
data()
exit
q()
library(swirl)
swirl()
1
swirl()
swirl()
windows(); dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = .4, col = "red")
5
12
abline(h = .05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
swirl()
q(*)
q()
library(swirl)
swirl()
swirl()
q()
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
cmat
points(cx, cy, col = c("red" , "orange", "purple") , cex = 2, lwd = 2)
points(cx, cy, col = c("red" , "orange", "purple") , pch = 3 , cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex =2, lwd = 2)
mdist(x, y, newCx, newCy)
apply( distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply( x, newClust2, mean)
tapply( y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex =2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19 , cex = 2)
points(kmObj$centers, col = c("black" , "red" , "green") , pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19 , cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19 , cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19 , cex = 2)
swirl()
windows()
swirl()
swirl()
v <- c(3, 4, -2)
which.min(v)
which(v == min(v))
?par
remove.packages(swirl)
remove.packages("swirl")
library(swirl)
swirl()
q()
library(swirl)
install.packages("swirl")
q()
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
library(swirl)
library()
install.packages("stringi")
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R" , local = TRUE)
q()
library(swirl)
swirl()
swirl()
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(ssd[, 1:12])
names(ub1d[, 1:12])
names(sub1[, 1:12])
windows(); myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[ , 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd( scale( sub1[  , -c(562, 563)] ) )
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[ , c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[ , -c(562:563)]   , centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[ , -c(562:563)]   , centers = 6, nstart = 1e2)
table(kClust$cluster, sub1$activity)
dim(  kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12]  , pch = 19, ylab = "Laying Cluster")
names(sub1[ , 1:3])
walkdown <- which( kClust$size == 49)
plot(kClust$centers[walkdown, 1:12]  , pch = 19, ylab = "Walkdown Cluster")
?unclass
swirl()
cmat
points(cx, cy, col = c("red" , "orange", "purple") , pch = 3 , cex = 2, lwd = 2)
points(cx, cy, col = c("red" , "orange", "purple") , pch = 3 , cex = 2, lwd = 2)
points(cx,cy,col = c("red","orange","purple"), pch = 3,cex=2,lwd=2)
dev.off(); points(cx,cy,col = c("red","orange","purple"), pch = 3,cex=2,lwd=2)
points(cx,cy,col = c("red","orange","purple"), pch = 3,cex=2,lwd=2)
plot()
dev.cur()
points(cx,cy,col = c("red","orange","purple"), pch = 3,cex=2,lwd=2)
c
c <- 5
0
play()
exit()
0
q()
c("red", "orange", "green")
c <- 5
c("red", "orange", "green")
c
c("red")
c("red", "orange", "green")
c
q()
windows()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
windows(); boxplot(log10(x0) , log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date( as.character(dates),   "%Y%m%d" )
head(dates)
hist(dates[negative] , "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in%  both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in%  both)
sapply(split(cnt0, cnt0$county.site) , nrow)
sapply(split(cnt1, cnt1$county.site) , nrow)
pm0sub <- subset(cnt0, County.Code == 63   & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63   & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date( as.character(pm0sub$Date),   "%Y%m%d" )
dates1 <- as.Date( as.character(pm1sub$Date),   "%Y%m%d" )
par(mfrow = c(1,2)  , mar = c(4, 4, 2, 1)      )
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE) , lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE) , lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0 , tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1 , tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0) , mean = mn0)
d1 <- data.frame(state=names(mn1) , mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[,3]))
segments(rep(1, 52) , mrg[,2] , rep(2, 52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
?gl
gl(1, 2, 3)
q()
1304287 * 28
.Last.value
.Last.value / (2^20)
2^20
q()
setwd('../Desktop/ds_course/RepData_PeerAssessment1/')
source('C:/Users/Owner/Desktop/ds_course/RepData_PeerAssessment1/course5poject1_Rscript.R')
df3
?stop
source('C:/Users/Owner/Desktop/ds_course/RepData_PeerAssessment1/course5poject1_Rscript.R')
source('C:/Users/Owner/Desktop/ds_course/RepData_PeerAssessment1/course5poject1_Rscript.R')
ls()
v <- df2$sum_step_day
sum(is.na(v))
length(v)
v <- rep(NA,5)
v
sum(v)
sum(v, na.rm = T)
str(df)
v <- df$steps
str(v)
v <- df2$sum_step_day
sum(v == 0)
8 * 288
x <- rnorm
x
x <- rnorm(1)
x
round(x)
round(x, digits = 2)
ls()
head(df)
wday(df$date)
str(df2)
df2$weekday <- wday(df2$date)
str(df2)
df2$weekday <- wday(df2$date, label = TRUE)
str(df2)
df2$weekday[1:10]
v <- df2$weekday
str(v)
?ifelse
ba <- ifelse(v %in% c("Sat", "Sat"), "weekday", "weekend")
str(ba)
ba <- ifelse(v %in% c("Sat", "Sat"), "weekend", "weekday")
str(ba)
ba <- ifelse(v %in% c("Sat", "Sun"), "weekend", "weekday")
str(ba)
ba <- factro(ba)
ba <- factor(ba)
str(ba)
df2$weekend <- ba
str(ba)
str(df2)
head(df2)
class(df2)
par(mfrow(2,1))
par(mfrow = c(2,1))
q()
